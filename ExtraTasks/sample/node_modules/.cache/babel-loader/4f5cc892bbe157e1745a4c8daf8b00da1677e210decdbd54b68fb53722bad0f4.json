{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Programs\\\\Pesto\\\\p8-siddharth-SHREE-000\\\\ExtraTasks\\\\sample\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chess\",\n    children: \"Hee\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = Square;\n;\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(Array(8).fill(Array(8).fill(null)));\n  const renderRows = () => {\n    let rows = [];\n    let eachLine = [];\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        eachLine.push( /*#__PURE__*/_jsxDEV(Square, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 23\n        }, this));\n      }\n      ;\n      rows.push(eachLine);\n      eachLine = [];\n    }\n    ;\n    console.log(rows, 'rows');\n    return rows;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((square, columnIndex) => /*#__PURE__*/_jsxDEV(Square, {\n        row: rowIndex,\n        col: columnIndex,\n        color: (rowIndex + columnIndex) % 2 === 0 ? 'white' : 'black'\n        // Add any additional props you need here\n      }, `${rowIndex}-${columnIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UMgQ/i2rV348bEGPV1px/iRYFC8=\");\n_c2 = App;\n;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Square","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","board","setBoard","Array","fill","renderRows","rows","eachLine","i","j","push","console","log","map","row","rowIndex","square","columnIndex","col","color","_c2","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/Programs/Pesto/p8-siddharth-SHREE-000/ExtraTasks/sample/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from 'react'\n\nfunction Square() {\n  return <div className=\"chess\">Hee</div>;\n};\n\nfunction App() {\n  const [board, setBoard] = useState(Array(8).fill(Array(8).fill(null)));\n\n  const renderRows = () => {\n    let rows = [];\n    let eachLine = [];\n    for(let i = 0; i < 8; i++){\n      for(let j = 0; j < 8; j++){\n        eachLine.push(<Square />);\n      };\n      rows.push(eachLine);\n      eachLine = [];\n    };\n    console.log(rows, 'rows');\n    return rows;\n  };\n  \n  return (\n    <div className=\"board\">\n    {board.map((row, rowIndex) => (\n      <div className=\"row\" key={rowIndex}>\n        {row.map((square, columnIndex) => (\n          <Square\n            key={`${rowIndex}-${columnIndex}`}\n            row={rowIndex}\n            col={columnIndex}\n            color={(rowIndex + columnIndex) % 2 === 0 ? 'white' : 'black'}\n            // Add any additional props you need here\n          />\n        ))}\n      </div>\n    ))}\n  </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,MAAMA,CAAA,EAAG;EAChB,oBAAOD,OAAA;IAAKE,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAC;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AACzC;AAACC,EAAA,GAFQP,MAAM;AAEd;AAED,SAASQ,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACe,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAEtE,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIC,IAAI,GAAG,EAAE;IACb,IAAIC,QAAQ,GAAG,EAAE;IACjB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAC;MACxB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAC;QACxBF,QAAQ,CAACG,IAAI,eAACpB,OAAA,CAACC,MAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,CAAC;MAC3B;MAAC;MACDS,IAAI,CAACI,IAAI,CAACH,QAAQ,CAAC;MACnBA,QAAQ,GAAG,EAAE;IACf;IAAC;IACDI,OAAO,CAACC,GAAG,CAACN,IAAI,EAAE,MAAM,CAAC;IACzB,OAAOA,IAAI;EACb,CAAC;EAED,oBACEhB,OAAA;IAAKE,SAAS,EAAC,OAAO;IAAAC,QAAA,EACrBQ,KAAK,CAACY,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBACvBzB,OAAA;MAAKE,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjBqB,GAAG,CAACD,GAAG,CAAC,CAACG,MAAM,EAAEC,WAAW,kBAC3B3B,OAAA,CAACC,MAAM;QAELuB,GAAG,EAAEC,QAAS;QACdG,GAAG,EAAED,WAAY;QACjBE,KAAK,EAAE,CAACJ,QAAQ,GAAGE,WAAW,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,GAAG;QACtD;MAAA,GAJM,GAAEF,QAAS,IAAGE,WAAY,EAAC;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMpC;IAAC,GATsBkB,QAAQ;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAWnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAER;AAACG,EAAA,CAlCQD,GAAG;AAAAqB,GAAA,GAAHrB,GAAG;AAkCX;AAED,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}